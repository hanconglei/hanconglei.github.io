<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[maven jar包下载报错问题]]></title>
    <url>%2F2019%2F10%2F14%2Fmaven-jar%E5%8C%85%E4%B8%8B%E8%BD%BD%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[pom文件上不报错，jar包却没有的解决方式 在idea右边找到maven–maven goal（第六个图标，图标上有一个蓝色的m）键入：mvn -U idea:idea即可]]></content>
      <categories>
        <category>Java相关</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java知识点归纳]]></title>
    <url>%2F2019%2F10%2F12%2FJava%E7%9F%A5%E8%AF%86%E7%82%B9%E5%BD%92%E7%BA%B3%2F</url>
    <content type="text"><![CDATA[java知识点归纳 本文转载自：https://zhuanlan.zhihu.com/p/27948809 感觉自己Java基础不是很扎实，准备从基础开始系统学习一下java基础，从知乎上转载一篇关于Java学习的知识点总结 1.JVM相关(包括了各个版本的特性)对于刚刚接触Java的人来说，JVM相关的知识不一定需要理解很深，对此里面的概念有一些简单的了解即可。不过对于一个有着3年以上Java经验的资深开发者来说，不会JVM几乎是不可接受的。 JVM作为Java运行的基础，很难相信对于JVM一点都不了解的人可以把Java语言吃得很透。我在面试有超过3年Java经验的开发者的时候， JVM几乎就是一个必问的问题了。当然JVM不是唯一决定技术能力好坏的面试问题，但是可以佐证Java开发能力的高低。 在JVM这个大类中，我认为需要掌握的知识有： JVM内存模型和结构 GC原理，性能调优 调优：Thread Dump， 分析内存结构 class 二进制字节码结构， class loader 体系 ， class加载过程 ， 实例创建过程 方法执行过程 Java各个大版本更新提供的新特性(需要简单了解) 2.Java的运行（基础必备）这条可能出看很简单，Java程序的运行谁不会呢？不过很多时候， 我们只是单纯通过IDE去执行Java程序，底层IDE又是如何执行Java程序呢？很多人并不了解。 这个知识点是最最基本的Java开发者需要掌握的，初学Java，第一个肯定是教你如何在命令行中执行Java程序，但是很多人一旦把Java学完了，IDE用上了，就把这个都忘了。为什么强调要知道这个呢，知道了Java最纯粹的启动方式之后，你才能在启动出问题的时候，去分析当时启动的目录多少，执行命名如何，参数如何，是否有缺失等。 这样有利于你真正开发中去解决那些奇奇怪怪的可能和环境相关的问题。 在这里需要掌握的知识有： Javac 编译Java文件为 class 文件 Java 命令的使用， 带package的Java类如何在命令行中启动 Java程序涉及到的各个路径(classpath， Java。library。path， Java运行的主目录等) 3.数据类型这条没有什么好多说的，无非就是Java中的基本类型和对象类型的掌握。可以再了解一些JDK如何自动转换方面的知识，包括装箱拆箱等，还要注意避免装箱之后的类型相等的判断 主要知识点： 基本类型： int， long， float， double， boolean ， 。。。 对应的对象类型： Integer 等类型到基本类型的转换， 装箱和拆箱 Object类型： equals， hashcode String 类型的特点 4.对象和实例，对象的创建在这方面，开发者需要了解class和instance的概念以及之间的差别， 这是Java面向对象特性的一个基础。主要知识点有： Class和 Instance 的概念 Instance 创建的过程： 1、 无继承：分配内存空间， 初始化变量， 调用构造函数 2、 有继承：处理静态动作， 分配内存空间， 变量定义为初始值 ， 从基类-&gt;子类， 处理定义处的初始化， 执行构造方法 需要注意的点： 3、静态属性等从基类-&gt;子类进行初始化 4、默认无参构造方法相关的特性 5.访问控制这也是Java封装特性的一个基础，需要掌握的有： public protected default private 对于class， method， field 的修饰作用 6.流程控制Java 流程控制的基础， 虽然有些语法不一定很常用，但是都需要了解，并且在合适的地方使用它们。 需要掌握的有： if， switch， loop， for， while 等流程控制的语法 7.面向对象编程的概念这是一个Java的核心概念，对于任何Java开发者都需要熟练掌握。Java中很多特性或者说知识点都是和Java面向对象编程概念相关的。在我的理解，一个好的开发者不仅仅需要了解这些特性（知识点）本身，也更需要知道这些对象在Java的面向对象编程概念中是如何体现出来的，这样更有利于开发者掌握Java这门开发语言，以及其他面向对象编程的语言。在这里只是简单罗列了一下，主要的知识点包括有： 面向对象三大特性：封装，继承，多态; 各自的定义概念，有哪些特性体现出来，各自的使用场景 静态多分派，动态单分派的概念 重载的概念和使用 继承：接口多实现，基类单继承 抽象，抽象类，接口 多态：方法覆盖的概念和使用 接口回调 8.Static 静态属性在Java日常开发中也是经常使用，需要了解和 static 关键字相关的用法，还有和其他关键字的配合使用， 如是否可以和 abstract， final 等关键字联合使用。 主要需要掌握的有： 静态属性的定义，使用，以及类加载时如何初始化 静态方法的定义和使用 静态类的定义和使用 静态代码块的定义和初始化时机 9.基础知识点这里主要罗列一些散落的，没有系统归类的一些Java知识点。在日常的开发中用到也不少。 这块内容其实还有很多，目前只是暂时归纳了这几个在这里： 包括有： equals ， hashcode ， string/stringbuffer ，final ， finally ， finalize 10.集合框架这个是一个需要多加掌握的部分，做Java开发，可以说没有不用到集合框架的，这很重要。但是这里的知识点并不难，但是对于集合最好要了解内部的实现方式，因为这样有助于你在各个不同的场景选择适合的框架来解决问题，比如有1W个元素的集合，经常要进行contains判断操作，知道了集合的特性或者内部实现，就很容易做出正确的选择。 这里包括了如下内容(并发相关不包含在内)： 集合框架的体系： 基础Collection ，Map 具体集合实现的内容， List ，Set ，Map 具体的实现，内部结构， 特殊的方法， 适用场景等 集合相关的工具类 Collections 等的用法 11.异常框架异常在Java的开发中可能没有那么被重视。一般遇到异常，直接上抛，或者随便catch一下处理之后对于程序整体运行也没有什么大的影响。不过在企业级设计开发中， 异常的设计与处理的好坏，往往就关系着这个系统整体的健壮性。一个好的系统的异常对于开发者来说，处理应该统一，避免各处散落很多异常处理逻辑；对于系统来说，异常应该是可控的，并且是易于运维的，某些异常出现后，应该有应对的方法，知道如何运维处理，所以虽然异常框架很简单，但是对于整个企业级应用开发来说，异常处理是很重要的，处理好异常就需要了解Java中的异常体系。 这部分需要掌握的知识点不多，主要就是： 异常的体系： Throwable Exception RuntimeException Error RuntimeException 和 一般 Exception 的区别， 具体处理方法等 12.Java IO IO 在Java中不仅仅是文件读写那么简单，也包括了 socket 网络的读写等等一切的输入输出操作。比如说 标准HTTP请求中Post的内容的读取也是一个输出的过程，等等… 对于IO，Java不仅提供了基本Input、Output相关的api，也提供了一些简化操作的Reader、Writer等api，在某些开发（涉及大量IO操作的项目）中也很重要，一般日常的开发中也会涉及（日志，临时文件的读写等）。 在这中的知识点主要有： 基本IO的体系： 包括有InputStream ， OutputStream， Reader/Writer， 文件读取，各种流读取等 NIO 的概念， 具体使用方式和使用场景 13.多线程并发多线程是Java中普遍认为比较难的一块。多线程用好了可以有效提高cpu使用率， 提升整体系统效率， 特别是在有大量IO操作阻塞的情况下；但是它也是一柄双刃剑， 如果用不好，系统非但提升不大，或者没有提升，而且还会带来多线程之间的调试时等问题。 在多线程中内容有很多，只是简单说明一下Java中初步使用多线程需要掌握的知识点，以后有机会单独再详细介绍一些高级特性的使用场景。 多线程的实现和启动 callable 与 runable 区别 syncrhoized ，reentrantLock 各自特点和比对 线程池 future 异步方式获取执行结果 concurrent 包 lock .. 14.网络Java中也是提供了可以直接操作 TCP协议、UDP协议的API。在需要强调网络性能的情况下，可以直接使用TCP/UDP 进行通讯。在查看Tomcat等的源码中，就可以看到这些相关API的使用情况。不过一般也比较少会直接使用TCP，会使用诸如MINA、Netty这样的框架来进行处理，因为这个方面的开发涉及不多，所以就不再详细罗列了。 15.时间日期处理几乎对于每个应用来说，时间日期的处理也是绕不过去的，但是JDK8 之前的时间相关API用法并不友好。在那个时代，可以选择Joda等时间框架。到了JDK8 发布之后，全新的时间API基本融合了其他框架的优点，已经可以很好的直接使用了。 对于Java开发者来说，需要熟练地使用API来对时间和日期做相关的处理。 具体知识点不再罗列，会在以后再写个专门的文章来总结一下JDK8中时间日期API的用法。 16.XML解析/ JSON解析其实这两块内容都不是J2SE里面的内容，但是在日常开发中，和其他程序交互，和配置文件交互，越来越离不开这两种格式的解析。 不过对于一个开发者来说，能够了解一些XML/JSON具体解析的原理和方法，有助于你在各个具体的场景中更好的选择合适你的方式来使得你的程序更有效率和更加健壮。 XML： 需要了解 DOM解析和 SAX解析的基本原理和各自的适用场景 JSON： 需要了解一些常用JSON框架的用法， 如 Jackson， FastJson， Gson 等。。 17.Maven的使用Maven也不是Java里面的内容，但是maven是革命性的，给Java开发带来了巨大的便利。从依赖的引入和管理，开发流程的更新和发布产出，乃至版本的更新，使用maven可以大大简化开发过程中的复杂度，从而节省大量时间。可以说，maven已经成为Java开发者的标配了。所以我把maven也作为一个Java开发者对于基础必备的知识点。以后会再放上一些我的一些对于maven使用的经验和技巧等，这里就不再细说了。 18.泛型这是JDK5开始引入的新概念，其实是个语法糖，在编写Java代码时会有些许便利， 一般的应用或者是业务的开发，只需要简单使用，不一定会用到定义泛型这样的操作， 但是开发一些基础公共组件会使用到，可以在需要的时候再细看这个部分，一般情况下只要会简单使用即可。 19.标注也是jdk5 之后引入的。spring是个优秀的框架，最开始就以xml作为标准的配置文件。不过到了Spring3 之后，尤其是 spring-boot 兴起之后，越来越推崇使用标注来简化xml配置文件了，对于开发者来说，可以节省不少xml配置的时间。但是劣势是在于标注散落在各个类中，不像xml，可以对所有配置有个全局性的理解和管理，所以还没有办法说完全就取代所有的xml。对于一般开发者，会使用标注即可，一些公共组建的开发者可能会需要了解标注的定义和实现，可以在具体需要的时候再细看。 20.RMIRemoteMethodInvocation ，Java语言特有的远程调用接口，使用还是比较简单方便。不过需要跨语言的情况下，就需要使用 webservice 等其他方式来支持。一般来说，程序都不需要使用RMI，不过可以在特定的情况下使用，我就在一个项目中，使用RMI来进行程序远程启动停止的控制。 21.JNIJava Native Interface，可以允许Java中调用本地接口方法，一般用于C/C++代码的调用。需要注意的是在Java中加载so/dll文件的路径问题，本身调用接口并不复杂，但是经常在是否加载了所需的本地接口库中花费较多时间。]]></content>
      <categories>
        <category>Java相关</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于博客搭建]]></title>
    <url>%2F2019%2F09%2F26%2F%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[** 博客终于搭好了，记录一下** 这几天由于上班时没什么事情，决定自己搭一个博客，于是开始着手准备环境，“nodjs+git+hexo”即可，关于安装方面不做过多赘述，百度搜索有很多。 第一天主要是装环境（其实环境之前就有的，所以这句说了等于没说），然后时选主题，这个难到我的，选择困难，看起来都还不错，找来找去我选了一个使用最多的next主题，一是当我遇到问题时找解决办法会有很多，二是其实这种简单得主题还是比较喜欢的，经过简单的熟悉之后，关于Hexo的命令给也就熟悉的差不多了，其实常用的就只有四五个，然后试着发表了两篇博客，之后部署到git上面，第一次看见自己的博客还是挺有成就感的，但是功能页面都太简单了，看起来很不爽。 第二天就是解决第一天留下的一些问题，开始给我自己的博客润色，加一些其他功能，首先就是先把乱码问题解决，全是英文的博客对我很不友好，但是中文还会乱码，我不得不下载一个文档编辑工具（notepad++），将我的_config.yml全部都使用utf-8编码，这样一来页面就舒服多了，然后就是加分类，加标签等功能，这些都是分分钟解决，乱七八糟的功能不管有用没用反正是都加上了，包括搜索，留言的还有访问次数的，这样逼格确实有了一定的提升，然后换了背景，然后觉得既然是一个自己的博客，怎么能少得了生活照的润色，这就是我第三天的目的。 第三天主要是解决图片上传的问题，网站上大多数都是用的github作为图片上传的地址，然后为了自己能用的舒服一点，我还是选择七牛云，上传照片功能是一个比较掉头发的工程，本身我是一个不会做前端的人，但是这个用的全是前端技术，我也只能照着别人做好的当作模板，首先就是滤清逻辑，找他上传的代码，找来找去根本就没有，他只是将图片放在文件夹，然后生成图片的json，再根据json去你自己上传的地方去取图片，既然没有，那就简单多了，自己搞一个上传，然后在用他的办法把图片放在图床上就OK了，不出所料果然成功的把图片展示在了我的博客中，之后优花了我24块大洋在腾讯云上注册了一个域名，绑在了我的博客上。现在图片上传还是比较麻烦的，明天如果还这么清闲我就把这个功能优化一下 搭起来这个博客真的是打发了上班的很多无聊时间，以后就用它来写东西了，改日不行就弄个打赏功能开启要饭的道路了。。。]]></content>
      <categories>
        <category>Hexo+next</category>
      </categories>
      <tags>
        <tag>闲聊</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[my-first-blog]]></title>
    <url>%2F2019%2F09%2F24%2Fmy-first-blog%2F</url>
    <content type="text"><![CDATA[关于Oracle12514错误解决办法总结最近在安装Oracle时发生了一些不愉快的事情，就是我的Oracle在虚拟机上可以正常运行，但是用本机的plsql去连接Oracle时总会显示：“ ORA-12514: TNS: 监听程序当前无法识别连接描述符中请求的服务”， 这个问题绝大多数是因为listener.ora文件的配置问题，我的文件路径在/oracle/product/12.2.0/db_1/network/admin具体配置如下： 12345678910111213141516171819202122 (SID_LIST = (SID_DESC = (SID_NAME = CLRExtProc) (ORACLE_HOME =/oracle/product/12.2.0/db_1)//network上一级 (PROGRAM = extproc) ) (SID_DESC = (GLOBAL_DBNAME = HR)//这里是你的数据库名称 (ORACLE_HOME =/oracle/product/12.2.0/db_1) (SID_NAME = hr)//这里是你的sid，当初配置监听默认是orcl ) )LISTENER = (DESCRIPTION_LIST = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.32.130)(PORT = 1521)) //这里要注意host要使用本机的IP地址，不要使用127.0.0.1或者localhost (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521)) ) )这里还要注意括号的问题 ，当时犯的错就是因为括号多了一个，如果你的配置没有问题却还是出12514，就有可能是括号的问题，注意多检查 另一个需要注意的文件是在同一文件夹下的tnsnames.ora文件，配置如下 1234567891011(DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.32.130)(PORT = 1521)) //同样要注意host是本机ip地址 ) (CONNECT_DATA = (SID = hr)//sid，当时设置的，默认orcl (SERVER = DEDICATED) (SERVICE_NAME = hr)//服务名，默认是orcl，和sid是一起设置的 )) 配置完之后需要重启Oracle的监听服务]]></content>
      <categories>
        <category>Oracle相关</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
</search>
